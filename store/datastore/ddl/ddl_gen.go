// Code generated by go-bindata.
// sources:
// sqlite3/10.sql
// sqlite3/1_init.sql
// sqlite3/2.sql
// sqlite3/3.sql
// sqlite3/4.sql
// sqlite3/5.sql
// sqlite3/6.sql
// sqlite3/7.sql
// sqlite3/8.sql
// sqlite3/9.sql
// mysql/10.sql
// mysql/1_init.sql
// mysql/2.sql
// mysql/3.sql
// mysql/4.sql
// mysql/5.sql
// mysql/6.sql
// mysql/7.sql
// mysql/8.sql
// mysql/9.sql
// postgres/10.sql
// postgres/1_init.sql
// postgres/2.sql
// postgres/3.sql
// postgres/4.sql
// postgres/5.sql
// postgres/6.sql
// postgres/7.sql
// postgres/8.sql
// postgres/9.sql
// DO NOT EDIT!

package ddl

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _sqlite310Sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd2\xd5\x55\xd0\xce\xcd\x4c\x2f\x4a\x2c\x49\x55\x08\x2d\xe0\xe2\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x28\x4e\x4d\x2e\x4a\x2d\x29\x56\x00\x03\x47\x17\x17\x05\x67\x7f\x9f\x50\x5f\x3f\xa8\x78\x7c\x72\x7e\x5e\x72\x6a\x62\x0e\x44\xda\xc9\xdf\xdf\xc7\xd5\xd1\xcf\x1a\xc5\x80\x92\xd4\xc4\xdc\x78\x98\x29\x48\x06\x20\x89\xc3\x4d\x81\x1b\xc0\x15\x1a\xe0\xe2\x18\x82\x66\x7b\xb0\x6b\x08\x56\x6b\x6d\x15\x0c\xac\x61\x1a\x50\x6c\x03\x69\xc0\x66\x0d\x58\x03\x17\xb2\xaf\x5d\xf2\xcb\xf3\xf0\xf8\xdb\x25\xc8\x3f\x00\xbb\xc7\xf1\xf8\x15\x59\x13\x16\x57\x58\x73\x01\x02\x00\x00\xff\xff\x5b\x45\x48\x74\x77\x01\x00\x00")

func sqlite310SqlBytes() ([]byte, error) {
	return bindataRead(
		_sqlite310Sql,
		"sqlite3/10.sql",
	)
}

func sqlite310Sql() (*asset, error) {
	bytes, err := sqlite310SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sqlite3/10.sql", size: 375, mode: os.FileMode(420), modTime: time.Unix(1479348247, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _sqlite31_initSql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x56\x4d\x6f\xe3\x36\x10\xbd\xeb\x57\xcc\x2d\x09\xea\xad\x2f\x45\x0f\xf5\xc9\xd9\xa8\x85\xd1\xac\xbc\x75\xe4\x22\x7b\x32\x68\x69\x62\x73\x4d\x91\x2a\x45\x3a\xf6\xbf\x2f\x48\xea\x83\x94\xd8\x85\x73\xa8\x00\x03\xf2\x7b\x33\xa3\xf9\x78\x43\xe9\xd3\x27\xf8\xa9\xa2\x07\x49\x14\xc2\xb6\x4e\x92\xcf\x9b\x74\x99\xa7\x90\x2f\x1f\x9f\x53\xd0\x0d\xca\x06\xee\x13\x7b\xb3\xa3\x25\x98\x6b\x95\xe5\xe9\x1f\xe9\x06\xbe\x6e\x56\x5f\x96\x9b\x6f\xf0\x67\xfa\x0d\x96\xdb\x7c\xbd\xca\x3e\x6f\xd2\x2f\x69\x96\x27\x33\x6b\xce\xc4\x81\x72\x80\x3c\x7d\xed\x10\x25\x4e\x18\x22\x0d\x16\x12\x95\x8f\xe0\xa5\xa6\xf2\xda\x3d\xa4\x03\x2b\x42\x59\xe0\x48\xce\x44\x11\x19\x20\x85\xa2\x67\x84\xc7\xf5\xfa\x39\x5d\x66\x1d\x58\x56\x26\x87\x10\x3c\x92\xe6\x08\x6d\xb4\x64\xb6\xcd\x56\x7f\x6d\xd3\xfb\x21\xe5\x87\xe4\x61\x31\xea\x83\xc4\x5a\xd8\x3e\x98\x9b\xae\x0f\xed\x75\x43\x3b\xac\x97\xdf\xc2\xc1\xab\x25\xc5\x3b\x47\xd9\x87\x74\x55\x59\x82\x93\x0a\x21\x46\xbc\x69\xc6\x06\xd6\x23\xda\xce\x4c\x3d\x18\xe5\xa7\x68\xa8\x82\x09\x8e\x31\x62\x2f\x09\x2f\x8e\x11\x42\xd1\x0a\x85\x56\x61\x2d\x2d\x57\x4b\x7a\x36\x62\x72\x57\xdf\x79\xe7\x27\x75\xa3\xb0\x8c\x72\x84\x31\xf1\xbe\xab\xe5\x0f\x38\x6d\xe7\x16\xe5\x4a\xac\x99\xb8\x36\x51\x4e\x91\x43\x33\xf5\x6b\x55\x30\x2d\x8e\xd4\xb5\x37\xe1\x50\x25\x61\xeb\x23\x4a\x69\x14\x71\x1b\x63\x6e\xfa\x71\xdf\xa0\x11\x6b\xdf\xc9\xab\xef\xa8\x45\x3b\xe5\x74\x68\x9f\x8d\xef\x33\x03\xdf\x36\xc8\x6c\x95\x3d\xa5\xaf\x40\x2f\xbb\xde\x02\xd6\x59\x97\x69\xe0\x35\xae\xe6\x84\x57\x5b\xcc\x09\xaf\x1f\xa9\xc5\x98\x4f\x4a\x31\x60\xad\xf7\x8c\x16\x00\x8f\xcf\xeb\xc7\x16\x69\xd5\x62\x91\xbe\x30\x2f\x40\xa4\xc7\x7b\x4d\x59\x69\xf3\xb2\x77\xde\x3e\xde\x90\x9b\x73\x19\xf6\xb8\xcf\xcf\x11\x5c\x57\x7b\xb7\x89\x23\x02\xcf\xc8\x95\x27\x15\x87\x36\x8a\x28\xdd\x8c\x51\xe4\xff\x68\xd4\x46\xe7\xa3\x20\x85\x44\xe2\xf4\x3f\x22\xcc\x14\xa2\xc4\x1b\xe5\xb4\x39\xc6\x42\x89\xaa\xa2\x6a\xfc\xe4\x61\x63\x7d\x54\xe2\x5b\x20\xf3\x1e\x6d\x6a\x2c\x26\x68\x25\xdc\xf6\xfa\xa8\xa2\x8a\xe1\x24\x42\x85\x4d\x43\x0e\x38\xb1\xad\xb0\x51\xa4\xaa\xc7\x29\x13\xad\x8e\x42\x8e\x83\x0c\xe7\x55\xd0\x42\x77\xe2\x8f\xd0\xe1\x08\x0b\xd7\xd2\x9f\xdd\x0c\x82\x11\xc7\x37\x61\x30\x01\x30\xcb\xd0\x49\x2a\x74\x5d\xfc\x87\x5f\x5b\xc8\xc4\xcf\xe1\x13\xbd\x7e\x17\x7b\xab\xd6\xef\x62\x1f\xbc\x3b\x6e\x50\xab\x71\xe1\xa2\xc4\xd1\xbb\xd7\x11\xbe\xfa\x03\x62\x10\xf1\x88\x18\xe4\xda\xf5\xd5\xa0\x78\xa1\x6a\x57\x88\x12\xc7\xe6\x83\x8e\xa7\x71\x64\x77\x8e\x07\xc4\x20\xd7\x49\xa8\x33\x95\x82\x57\x66\x89\xc2\xd9\xf9\x95\xcc\x60\x48\x3f\x3e\xb8\xde\xda\x74\xdf\x35\xd6\x0f\x10\x19\x59\xd7\x42\x08\x3d\xda\xae\x4e\x86\xb5\xfa\x1d\xb2\x75\x0e\xe9\xeb\xea\x25\x7f\x01\x26\x0e\x76\x74\x4c\x1c\x3e\xf0\xf9\x63\xac\xdb\x61\xf7\x4d\x30\x58\x49\x14\x01\x18\x9d\x75\x83\x71\xe4\xa8\x0b\xb3\x31\x39\xdb\x74\x22\x92\xf8\x51\x3e\xd6\x9c\x94\xa5\xec\xc7\xee\x10\x59\x1c\x43\xa4\x40\xa9\xba\x04\x1d\x72\xc2\x2b\x84\x48\x41\xa0\x47\x4c\xbe\xab\xec\x25\xdd\xe4\x26\x8d\x75\x9b\xe0\xdf\xcb\xe7\x6d\xfa\x72\xcf\x35\x63\x33\xb8\xd3\x9c\x5e\x7e\x9b\xcf\xe7\x67\x22\xe7\x52\xf3\x79\x29\x8a\x13\xca\x9f\x1b\x51\x9c\xee\x66\x70\xc7\x28\xd7\x97\x1d\xa9\xca\x5f\x7f\x31\x7f\xfb\xdf\xc3\xe2\x7f\x8c\x9c\xf8\x5f\xbd\x4f\xe2\x9d\x27\xc9\xd3\x66\xfd\xb5\x6d\xba\x7d\xd6\xc2\x47\x8c\x0c\x02\xc0\xe8\x28\x00\xdc\x41\x10\x40\xe6\xe5\x19\x00\xf6\x8d\x1b\x20\xf6\xbb\x32\x40\xec\x17\xf7\xe2\xdf\x00\x00\x00\xff\xff\x09\x32\x6e\x79\x95\x0b\x00\x00")

func sqlite31_initSqlBytes() ([]byte, error) {
	return bindataRead(
		_sqlite31_initSql,
		"sqlite3/1_init.sql",
	)
}

func sqlite31_initSql() (*asset, error) {
	bytes, err := sqlite31_initSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sqlite3/1_init.sql", size: 2965, mode: os.FileMode(420), modTime: time.Unix(1478671402, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _sqlite32Sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd2\xd5\x55\xd0\xce\xcd\x4c\x2f\x4a\x2c\x49\x55\x08\x2d\xe0\xe2\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x28\x4a\x2d\xc8\x2f\x56\x50\x70\x74\x71\x51\x70\xf6\xf7\x09\xf5\xf5\x03\x8b\xc4\x17\x27\xe7\x2a\x80\x40\x88\x6b\x44\x88\x35\x8a\x86\xa4\xd2\xcc\x9c\x94\x62\x64\x0d\x60\x91\xf8\x94\xd4\x82\x9c\xfc\x4a\xa8\x06\xae\xd0\x00\x17\xc7\x10\xb8\xe9\xc1\xae\x21\x08\x63\x6d\x15\xd4\xd3\x33\x4b\xd4\xad\x61\x6a\xa0\x06\x82\xd4\xa0\x98\x64\xab\xa0\xae\x6e\xcd\xc5\x85\xec\x78\x97\xfc\xf2\x3c\xac\xce\x77\x09\xf2\x0f\x40\x77\x3f\x56\x67\x23\x2b\x44\xb6\xcd\x9a\x0b\x10\x00\x00\xff\xff\xf7\x09\x10\x3c\x25\x01\x00\x00")

func sqlite32SqlBytes() ([]byte, error) {
	return bindataRead(
		_sqlite32Sql,
		"sqlite3/2.sql",
	)
}

func sqlite32Sql() (*asset, error) {
	bytes, err := sqlite32SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sqlite3/2.sql", size: 293, mode: os.FileMode(420), modTime: time.Unix(1476151981, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _sqlite33Sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x52\xcd\x6e\xf2\x30\x10\xbc\xfb\x29\xf6\x08\xfa\xc2\x13\xe4\x94\x0f\x56\x55\xd4\xe2\x50\xcb\x91\xe0\x84\xac\x66\x15\x59\x25\x3f\xb2\x03\xb4\x6f\x5f\xd1\x98\x24\x8e\x73\xa9\x4f\xd6\xce\xce\xee\xce\x68\x36\x1b\xf8\x57\xe9\xd2\xa8\x8e\x20\x6f\x19\xdb\x0a\x4c\x24\x82\x4c\xfe\xbf\x21\x58\xfa\x30\xd4\x59\x58\x31\xf7\x3d\xeb\x02\xdc\x4b\xb9\xc4\x17\x14\x70\x10\xe9\x3e\x11\x27\x78\xc5\x13\x24\xb9\xcc\x52\xbe\x15\xb8\x47\x2e\x59\xe4\x38\x86\xda\xa6\x27\x3a\xce\x80\xd4\xaa\xa2\x7e\x9a\xc4\xe3\x48\xb8\xa9\xcb\x95\xc2\xb2\xae\x54\x49\x36\x28\xd3\x8d\xea\x6e\x2c\xb3\x28\xe7\xe9\x7b\x8e\xab\xc9\x8e\x08\xfc\x53\xd6\x6c\x1d\xcf\xa4\x1a\x2a\xb5\xed\xcc\xf7\x43\xeb\xf3\xff\x37\xb5\x03\x6b\x41\xef\x80\xa9\xa2\x30\x53\xc5\x03\x70\xb5\x64\x7a\x3b\x66\x40\xab\xac\xbd\x37\xa6\x08\x00\xaa\x94\xbe\x2c\x8d\xea\x9a\x4f\xaa\x21\x34\xc4\x3b\x22\x82\xf9\xbd\x9e\x29\x29\xdf\xe1\x11\xf4\xd7\xd9\x45\xe0\xb7\x09\x20\xe3\x43\x26\x60\x35\xf3\x34\x0e\xb8\xde\x86\x07\x77\x34\x39\x58\x1e\x33\x36\x8d\xe2\xae\xb9\xd7\x8c\xed\x44\x76\x58\x3e\x25\x9e\x61\xde\x3c\x07\x7a\x19\xf6\x6a\xcf\xee\x98\xfd\x04\x00\x00\xff\xff\x4d\x24\x19\x81\xff\x02\x00\x00")

func sqlite33SqlBytes() ([]byte, error) {
	return bindataRead(
		_sqlite33Sql,
		"sqlite3/3.sql",
	)
}

func sqlite33Sql() (*asset, error) {
	bytes, err := sqlite33SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sqlite3/3.sql", size: 767, mode: os.FileMode(420), modTime: time.Unix(1476151981, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _sqlite34Sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd2\xd5\x55\xd0\xce\xcd\x4c\x2f\x4a\x2c\x49\x55\x08\x2d\xe0\xe2\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\xc8\xca\x4f\x2a\x56\x70\x74\x71\x51\x70\xf6\xf7\x09\xf5\xf5\x03\xf1\xe3\x53\x8b\x8a\xf2\x8b\x14\x42\x5c\x23\x42\xac\xb9\xb8\x42\x03\x5c\x1c\x43\xa0\xea\x82\x5d\x43\x90\x14\xd8\x2a\xa8\xab\x5b\x73\x71\x21\x9b\xee\x92\x5f\x9e\x87\xc5\x7c\x97\x20\xff\x00\x0c\x0b\xac\xb9\x00\x01\x00\x00\xff\xff\x67\xcc\x0b\xa1\x98\x00\x00\x00")

func sqlite34SqlBytes() ([]byte, error) {
	return bindataRead(
		_sqlite34Sql,
		"sqlite3/4.sql",
	)
}

func sqlite34Sql() (*asset, error) {
	bytes, err := sqlite34SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sqlite3/4.sql", size: 152, mode: os.FileMode(420), modTime: time.Unix(1476151981, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _sqlite35Sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x90\x4f\x4b\x03\x31\x10\xc5\xef\xf3\x29\xde\x6d\x5b\xb4\xe0\x3d\x78\x48\x9b\x01\x0b\x6b\x52\xd6\x2c\x7a\x5b\x2a\x89\x61\x40\x63\xd9\x3f\xea\xc7\x17\x6b\x5b\x17\x5d\xc5\xeb\xcc\x7b\xbf\x61\x7e\x8b\x05\xce\x9e\x24\xb5\xdb\x3e\xa2\xde\x11\xe9\xd2\x73\x05\xaf\x97\x25\xe3\x7e\x90\xc7\xd0\x41\x1b\x83\x95\x2b\xeb\x6b\xfb\x39\x69\x3a\x49\x39\x06\x00\x4b\xe7\x4a\xd6\x56\xfd\xab\xf5\x12\x5b\x79\x90\x18\xbe\x5a\x54\x6f\x8c\xf6\xa7\xc6\x0d\xfb\xef\x07\x2e\x71\xa1\x7e\x4d\x9d\x80\xfb\x14\xad\x2a\xfe\x88\xad\xad\xe1\x3b\xc8\x5b\x73\x40\xf5\xdb\x7e\xe8\x9a\x76\xc8\x59\x72\x82\xb3\x47\xce\x6c\xbc\x9f\x13\x70\x7b\xc5\x15\x63\x3c\xc5\xda\x62\x56\xec\x62\x0e\x92\x53\x71\x8e\xe2\x40\x29\xe6\x8a\x68\x2c\xce\x3c\xbf\xe6\x49\x75\xa6\x72\x9b\x29\x77\x93\xc6\x7e\x86\x8f\x1f\x2a\xda\xef\xfe\x7c\x4d\xd1\x7b\x00\x00\x00\xff\xff\xdf\xaa\x61\xf7\xcb\x01\x00\x00")

func sqlite35SqlBytes() ([]byte, error) {
	return bindataRead(
		_sqlite35Sql,
		"sqlite3/5.sql",
	)
}

func sqlite35Sql() (*asset, error) {
	bytes, err := sqlite35SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sqlite3/5.sql", size: 459, mode: os.FileMode(420), modTime: time.Unix(1476151981, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _sqlite36Sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x5c\xcf\xc1\x8a\x83\x30\x10\x06\xe0\xfb\x3c\xc5\x1c\x95\xd5\x27\xf0\x94\xd5\x61\x09\xbb\x46\x37\x24\xb0\x9e\x96\x60\x52\x11\xaa\x86\x34\xa5\xf4\xed\x0b\x95\xda\xda\x39\x0d\x1f\xfc\x33\xfc\x79\x8e\x1f\xd3\x38\x04\x13\x1d\x6a\x0f\x50\x4a\x62\x8a\x50\xb1\xcf\x1f\x42\x33\xb8\x39\x9e\x30\x81\x75\xfb\x1f\x2d\xae\xc3\x85\xa2\x2f\x92\xd8\x4a\x5e\x33\xd9\xe1\x37\x75\xc8\xb4\x6a\xb8\x28\x25\xd5\x24\x14\x64\x6b\xc2\x58\x1b\xee\x09\x45\x7f\x1b\xfa\xa3\x89\x87\x25\x4c\x3b\xec\x8d\x37\xfd\x18\xaf\x8f\xdb\x9b\x07\x67\xa2\xb3\xf8\xee\x67\x6f\xf7\x0e\x99\x16\xfc\x57\x53\xf2\xfc\x9c\x42\x5a\x00\xc0\x6b\xc7\x6a\xb9\xcc\x00\x95\x6c\xda\x5d\xc7\x02\x6e\x01\x00\x00\xff\xff\x4a\xa6\xde\xfc\x09\x01\x00\x00")

func sqlite36SqlBytes() ([]byte, error) {
	return bindataRead(
		_sqlite36Sql,
		"sqlite3/6.sql",
	)
}

func sqlite36Sql() (*asset, error) {
	bytes, err := sqlite36SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sqlite3/6.sql", size: 265, mode: os.FileMode(420), modTime: time.Unix(1476151981, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _sqlite37Sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x90\xc1\x4a\xc4\x30\x14\x45\xf7\xef\x2b\xde\xb2\x83\x9d\x2f\xc8\x2a\x4e\x1f\x12\x74\xd2\x31\x24\x30\xb3\x2a\x41\x1f\x25\x68\xaa\xb4\xb1\xea\xdf\x4b\xa9\x48\x8c\x35\xbb\x70\xb8\x37\x37\x67\xbf\xc7\xab\x18\xfa\xd1\x27\x46\xf7\x0a\x70\x30\x24\x2d\xa1\x95\xd7\x77\x84\x89\x7d\xec\x26\x7e\x18\x39\x4d\x58\x41\x7e\xef\xc2\x23\x2e\x47\x69\x4b\x37\x64\xf0\x64\xd4\x51\x9a\x0b\xde\xd2\x05\xa5\xb3\xad\xd2\x07\x43\x47\xd2\x16\xea\x3c\xf5\xc4\x9f\x4b\xca\xd2\xb9\x00\x83\x8f\xbc\x09\x66\xff\xfc\xc6\x5b\x20\x44\xdf\xf3\xb4\x01\x78\xe6\x21\x7d\x03\xa8\x9d\x56\xf7\x8e\xaa\xf2\xad\x1a\x8b\x59\x3b\xd8\x89\x9f\xef\x2b\xdd\xd0\x19\xc3\x47\x97\x1b\x58\xc7\xb7\xfa\xb7\x16\xac\xca\x22\x01\x90\x5b\x6d\x5e\xde\x07\x80\xc6\xb4\xa7\xff\x6b\xc5\xca\xff\x5a\x17\xf0\x15\x00\x00\xff\xff\x25\x09\x3e\x9c\xa1\x01\x00\x00")

func sqlite37SqlBytes() ([]byte, error) {
	return bindataRead(
		_sqlite37Sql,
		"sqlite3/7.sql",
	)
}

func sqlite37Sql() (*asset, error) {
	bytes, err := sqlite37SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sqlite3/7.sql", size: 417, mode: os.FileMode(420), modTime: time.Unix(1476151981, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _sqlite38Sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd2\xd5\x55\xd0\xce\xcd\x4c\x2f\x4a\x2c\x49\x55\x08\x2d\xe0\xe2\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x48\x2a\xcd\xcc\x49\x29\x56\x70\x74\x71\x51\x70\xf6\xf7\x09\xf5\xf5\x83\x88\xc4\x17\x24\x16\xa5\xe6\x95\x28\x78\xfa\x85\xb8\xba\xbb\x06\x29\xb8\xb8\xba\x39\x86\xfa\x84\x28\x18\x58\x73\x71\x21\x1b\xe7\x92\x5f\x9e\x87\xd5\x40\x97\x20\xff\x00\x6c\x26\x5a\x73\x01\x02\x00\x00\xff\xff\xec\x8b\x73\x08\x8e\x00\x00\x00")

func sqlite38SqlBytes() ([]byte, error) {
	return bindataRead(
		_sqlite38Sql,
		"sqlite3/8.sql",
	)
}

func sqlite38Sql() (*asset, error) {
	bytes, err := sqlite38SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sqlite3/8.sql", size: 142, mode: os.FileMode(420), modTime: time.Unix(1477308170, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _sqlite39Sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd2\xd5\x55\xd0\xce\xcd\x4c\x2f\x4a\x2c\x49\x55\x08\x2d\xe0\xe2\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x28\x4e\x4d\x2e\x4a\x2d\x29\x56\x00\x03\x47\x17\x17\x05\x67\x7f\x9f\x50\x5f\x3f\xa8\x78\x7c\x71\x76\x66\x41\x7c\x59\x6a\x51\x66\x5a\x25\x44\x89\x93\xbf\xbf\x8f\xab\xa3\x9f\x35\x8a\x21\x25\xa9\x89\xb9\xf1\x30\x93\x90\x0c\x41\x12\x47\x31\x09\x6e\x08\x57\x68\x80\x8b\x63\x08\x9a\x2b\x82\x5d\x43\x70\x5a\x6f\xab\x60\x60\x0d\xd3\x84\x62\x2b\x48\x13\x2e\xeb\xc0\x9a\xb8\x90\x43\xc1\x25\xbf\x3c\x0f\x4f\x38\xb8\x04\xf9\x07\xe0\x0e\x08\x3c\x7e\x47\xd6\x88\xc3\x35\xd6\x5c\x80\x00\x00\x00\xff\xff\xae\xf4\x53\xfc\x8f\x01\x00\x00")

func sqlite39SqlBytes() ([]byte, error) {
	return bindataRead(
		_sqlite39Sql,
		"sqlite3/9.sql",
	)
}

func sqlite39Sql() (*asset, error) {
	bytes, err := sqlite39SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sqlite3/9.sql", size: 399, mode: os.FileMode(420), modTime: time.Unix(1477308170, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mysql10Sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd2\xd5\x55\xd0\xce\xcd\x4c\x2f\x4a\x2c\x49\x55\x08\x2d\xe0\xe2\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x28\x4e\x4d\x2e\x4a\x2d\x29\x56\x00\x03\x47\x17\x17\x05\x67\x7f\x9f\x50\x5f\x3f\xa8\x78\x7c\x72\x7e\x5e\x72\x6a\x62\x0e\x44\xda\xc9\xdf\xdf\xc7\xd5\xd1\xcf\x1a\xc5\x80\x92\xd4\xc4\xdc\x78\x98\x29\x48\x06\x20\x89\xc3\x4d\x81\x1b\xc0\x15\x1a\xe0\xe2\x18\x82\x66\x7b\xb0\x6b\x08\x56\x6b\x6d\x15\xd2\x12\x73\x8a\x53\xad\x61\x9a\x50\x6c\x04\x69\xc2\x66\x15\x5c\x13\x17\xb2\xef\x5d\xf2\xcb\xf3\xf0\xf8\xdf\x25\xc8\x3f\x00\x7b\x00\xe0\xf1\x33\xb2\x26\x2c\x2e\xb1\xe6\x02\x04\x00\x00\xff\xff\x15\x7e\x10\xfd\x7f\x01\x00\x00")

func mysql10SqlBytes() ([]byte, error) {
	return bindataRead(
		_mysql10Sql,
		"mysql/10.sql",
	)
}

func mysql10Sql() (*asset, error) {
	bytes, err := mysql10SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "mysql/10.sql", size: 383, mode: os.FileMode(420), modTime: time.Unix(1479348247, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mysql1_initSql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x56\x4d\x6f\xe3\x36\x10\xbd\xeb\x57\xf0\x96\x18\xf5\xd6\xe9\x22\x29\x8a\x1a\x3d\x28\x31\xb7\x35\xea\x48\x5b\x59\x5e\xec\x9e\xbc\xb4\xc4\xd8\x8c\x29\x52\xe5\x87\x63\xff\xfb\x82\xd4\x27\x15\xda\x49\x0f\x2b\xc0\x80\x3c\x6f\x66\x38\x9c\x79\x8f\xe2\x87\x0f\xe0\xa7\x82\x6c\x05\x52\x18\xac\xca\x20\x78\x48\x60\x98\x42\x90\x86\xf7\x0b\x08\xe6\x9f\x40\x14\xa7\x00\x7e\x9d\x2f\xd3\x25\xd0\x12\x0b\x09\xae\x03\xfb\xb2\x26\x39\x30\xcf\x3c\x4a\xe1\x9f\x30\x01\x9f\x93\xf9\x63\x98\x7c\x03\x7f\xc3\x6f\x20\x5c\xa5\xf1\x7a\x1e\x3d\x24\xf0\x11\x46\x69\x30\xb6\xfe\x94\x6f\x09\x03\xe0\x4b\x98\x3c\xfc\x15\x26\xd7\x1f\xef\xee\x46\x35\xa2\xf8\x1e\xf7\x90\xbb\x9b\x9b\x06\x91\x38\x13\x58\xf9\x10\x7c\x2c\x89\x38\x35\xab\x37\xc6\x02\x11\xea\x4d\x84\x0e\x48\x21\xe1\x45\x32\x45\x0e\x18\xdc\xc7\xf1\x02\x86\x51\x63\xcc\x0b\x53\xab\x6b\xdc\x21\xb9\x03\x83\xec\xc1\x78\x15\xcd\xff\x59\xc1\xeb\x6e\x8b\xa3\x60\x34\xbd\xd8\x46\x81\x4b\x6e\xdb\x68\x5e\x9a\x36\xd6\xcf\x7b\xba\x69\xc3\xfa\x23\x00\x5d\x1b\x2c\xc6\x5f\x18\x16\x6d\x4a\xb7\xe1\xd6\x81\xa1\x02\x83\x4b\x0e\x4f\x9a\xd2\xce\xcb\xe3\x50\xf7\x73\x90\xa1\x6a\xab\x75\xa0\x84\xed\x5f\x2f\xf1\xcb\x4d\xe7\x91\x51\xce\xf0\x45\x8f\x8d\x40\x2c\xdb\x5d\x58\x44\x91\x02\x73\xad\xbc\x4d\x28\x05\x39\x18\x4e\x57\x4f\x3b\xc9\x2a\x4e\x68\xa9\x70\xee\xc5\x10\xa5\xfc\x65\x5d\x8a\x0b\x98\xb6\x3c\xf0\x62\x39\x2e\x29\x3f\x49\x2f\xa6\xd0\x56\xbe\x8e\xab\x59\x75\x7e\x93\xa8\x2c\x7b\x1c\x71\x66\xd1\xb2\xcf\x1d\xda\x9b\x0c\xfc\xbe\xc7\x27\xf9\xdd\x50\x70\x8f\x4f\x2d\x8b\xde\xc3\x3d\xe3\xdf\xd0\xb6\xed\xb7\x31\x96\x7a\x43\x49\x06\xc0\x23\x9c\xcd\x57\x8f\xf7\x8b\xf8\xbe\xb6\xd7\x63\xe8\xd9\xdb\xaa\x7b\xc9\xde\x2c\x79\xa3\x09\xcd\xad\x6a\xec\x5b\x4f\x36\xef\x29\xbb\x8a\xe9\xf4\xd6\x96\x5e\x01\x4c\x17\x9b\x4a\x31\x03\x00\x1f\x30\x53\x9e\xc1\x54\xa8\x54\x48\x69\x79\x0e\xc5\xec\x5f\x8d\xb5\x61\xd9\x20\x69\x26\x30\xaa\xd8\x37\x00\xa4\x42\xc2\x0b\x3c\x11\x46\xe4\xce\x97\x8a\x17\x05\x51\xe7\x2a\xe8\xf4\xe3\x43\x05\x7e\xf2\x92\xae\x45\x65\x89\xb3\xd7\xca\x6c\xe0\x82\x57\xe2\xf2\x05\x2b\xa2\x28\xf6\xc9\xba\x82\x0b\x2c\x25\xda\xe2\x3e\x9b\x6f\x9c\xe8\x02\x4b\x85\x8a\x72\xb8\x5b\xa4\xd5\x8e\x8b\x73\x8b\x76\x47\x92\x77\xd1\xfa\xdb\x70\x26\xb8\x3b\xae\xdc\xe0\x96\xab\x7d\xa2\x8c\x81\xc3\xa7\x51\x30\x9a\xc1\x4f\xe1\x6a\x91\x02\x13\xb9\x84\xe9\x1f\x5a\x3d\xfd\x56\x6c\x6e\xc1\x43\xbc\x58\x84\x29\x6c\xfe\xaf\x35\x23\x19\xcf\xf1\x3a\x23\x1d\xdb\xe7\xd1\x0c\x7e\x05\xe4\xb8\xee\x92\x82\x38\x6a\x09\xef\x2e\x75\x59\x24\xcf\x7c\x63\x25\xf2\xcc\x37\xce\x77\xe5\x3d\x12\x31\x31\xcc\xd4\xe6\x7e\xd7\x2b\xa0\xaf\x39\x07\xe8\x94\x33\x00\x3a\x6d\x0c\x1b\x6e\x50\x7c\x24\x6a\x6d\x3a\xe1\x09\x13\xcd\xc9\xec\x00\x9d\x9a\x06\x40\xa7\x8d\x57\x11\x07\x22\x38\x2b\x8c\x82\x5d\x9e\xb5\x43\xed\x6f\x6d\x0c\xba\xfd\x38\xa7\x51\x3b\x9f\xd6\xdb\x8c\xa7\x6a\x75\x3f\xc1\x68\xea\x8d\x60\x76\x97\x4e\x44\xdd\xe6\x37\x86\x49\xf9\xd6\x0e\x93\xf2\xed\xff\xb9\x6b\x19\xf7\x7a\xfe\x6d\x3b\x8c\x2d\x47\x0a\x01\xe0\x3d\x87\xbb\x90\x37\x8f\x61\x53\xba\xad\xca\x43\x95\x8b\x65\x59\x7f\x94\xe7\xc2\x91\xd8\xc7\xdb\x51\x03\x89\xcc\xbd\x5c\x35\x40\x86\x85\x72\xeb\xae\xec\x7b\x7c\x02\x3e\x7b\x86\xc0\xc0\x6e\xb6\x14\xcc\xa3\x25\x4c\x52\x53\x6a\x5c\x6f\xe2\x4b\xb8\x58\xc1\xe5\x35\xd3\x94\x8e\xc1\x95\x66\xe4\xf8\xfb\x64\x32\x39\x20\x31\x11\x9a\x4d\x72\x9e\xed\xb1\xf8\x59\xf2\x6c\x7f\x35\x06\x57\x94\x30\x7d\x5c\xa3\x22\xff\xf5\xd6\xfc\x6d\x7f\xa3\xe9\x0f\xcc\x1c\xf4\xef\xe6\x33\xfe\xc2\x82\x60\x96\xc4\x9f\xeb\xc1\xd8\xb5\xa6\x7d\x8b\x61\x8c\x63\x30\x94\x73\x0c\xd5\xa1\xe2\x98\xaa\xbb\x80\x63\xb2\x17\x54\xc7\x62\x6f\xfe\xd3\xe0\xbf\x00\x00\x00\xff\xff\xfb\x70\xf7\x24\x2c\x0c\x00\x00")

func mysql1_initSqlBytes() ([]byte, error) {
	return bindataRead(
		_mysql1_initSql,
		"mysql/1_init.sql",
	)
}

func mysql1_initSql() (*asset, error) {
	bytes, err := mysql1_initSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "mysql/1_init.sql", size: 3116, mode: os.FileMode(420), modTime: time.Unix(1481277476, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mysql2Sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x8f\x4f\x0b\x82\x30\x18\x87\xef\xfb\x14\xef\xcd\x24\x04\x09\x3c\x0d\x0f\xcb\x0d\x3c\x58\xca\x9a\x75\x94\x4a\x11\x61\xfe\xc1\x29\xd1\xb7\x0f\x2d\x6d\x8a\xef\xf1\xc7\xfb\xf0\xf0\x58\x16\xec\xcb\x22\x6f\xef\x5d\x06\x71\x83\x10\x09\x04\xe3\x20\xc8\x31\x60\xd0\x66\x4d\xad\x00\x08\xa5\xe0\x85\x41\x7c\x3a\x8f\x4b\xa2\x9e\x25\x0c\x77\x25\xdc\xf3\x09\xdf\x1d\x1c\x13\x2f\xb8\x47\x5f\xc8\x54\xe9\xdc\xb8\x24\x69\xd6\xc8\xfa\x3d\x73\x8e\x6d\x9b\x18\xa1\x38\xa2\x44\xcc\xb2\x0b\x13\x7f\x8b\x0b\x46\x5e\x74\x06\xdc\x7c\xc6\x99\x3e\x57\xbd\x94\x78\x22\x7f\xba\x81\x5c\x78\x5c\x30\x26\x74\xb5\x7f\x71\xa4\xb7\xd3\xfa\x55\x6d\xd6\x53\x1e\x46\xeb\xfc\xcd\x5c\xfd\x51\xf7\x61\xf4\x09\x00\x00\xff\xff\xd2\x59\xc2\x6b\x64\x01\x00\x00")

func mysql2SqlBytes() ([]byte, error) {
	return bindataRead(
		_mysql2Sql,
		"mysql/2.sql",
	)
}

func mysql2Sql() (*asset, error) {
	bytes, err := mysql2SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "mysql/2.sql", size: 356, mode: os.FileMode(420), modTime: time.Unix(1476151981, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mysql3Sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x92\xdf\x6b\xfa\x30\x14\xc5\xdf\xf3\x57\xdc\xc7\xca\xb7\x82\x7c\xc1\xa7\x3e\x45\x1b\xb6\x30\x9b\xba\xd0\x8e\xf9\x24\x61\xbd\x48\x98\xfd\x41\x52\x75\xfb\xef\x87\xb6\x8b\xa6\x76\x83\xf5\x29\x70\xce\x49\xce\xfd\xf4\x4e\xa7\xf0\xaf\xd4\x3b\xa3\x5a\x84\xbc\x21\x64\x29\x19\xcd\x18\x64\x74\xb1\x62\x60\xf1\xcd\x60\x6b\x21\x20\xfd\x71\xab\x0b\xe8\x3f\x2e\x32\xf6\xc0\x24\xac\x25\x4f\xa8\xdc\xc0\x13\xdb\x00\xcd\xb3\x74\xcb\xc5\x52\xb2\x84\x89\x8c\x84\x7d\xc8\x60\x53\x77\xc9\x3e\xe4\x94\x4a\x95\xd8\x5d\xf7\x42\xe5\xf2\x91\xca\xe0\xff\x7c\x3e\x71\xf2\x51\xed\x0f\x9d\x9e\xb0\x98\xe7\xc9\x62\x95\x2e\x9c\xa8\x4b\xb5\x43\xeb\x65\x67\xb3\xd9\x35\x8c\x47\xac\xda\x11\x9d\x84\xb9\xe0\xcf\x39\x0b\x6e\x3a\x84\xe0\x57\x9d\x90\x49\x34\x60\x61\x70\xa7\x6d\x6b\x3e\xcf\x30\xbe\xcf\x7f\xc4\xe1\x62\x23\x40\x9c\xa6\x8a\xc2\x8c\x21\x71\x06\x2c\x95\xde\x7b\x86\xf9\x65\x6c\x67\x38\x58\x34\x1d\xd8\x01\x18\xe7\x68\x94\xb5\xa7\xda\x14\x3f\x3b\xda\xfa\x1d\x2b\xf8\x05\x9e\xd7\x37\x84\xe1\x68\x1e\x40\x2e\x62\xf6\x0a\xfa\x63\xdb\xef\xd3\xc5\x04\x90\x0a\xb7\x60\x10\x0c\xf8\x47\x77\x59\xef\x85\x73\xf6\xfa\x43\xee\x1e\x8f\x08\xb9\xdd\xeb\xb8\x3e\x55\x84\xc4\x32\x5d\x8f\x57\x89\x06\x9a\x77\x5f\x44\xbe\x02\x00\x00\xff\xff\xaf\x17\x37\xb5\x23\x03\x00\x00")

func mysql3SqlBytes() ([]byte, error) {
	return bindataRead(
		_mysql3Sql,
		"mysql/3.sql",
	)
}

func mysql3Sql() (*asset, error) {
	bytes, err := mysql3SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "mysql/3.sql", size: 803, mode: os.FileMode(420), modTime: time.Unix(1476151981, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mysql4Sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd2\xd5\x55\xd0\xce\xcd\x4c\x2f\x4a\x2c\x49\x55\x08\x2d\xe0\xe2\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\xc8\xca\x4f\x2a\x56\x70\x74\x71\x51\x70\xf6\xf7\x09\xf5\xf5\x03\xf1\xe3\x53\x8b\x8a\xf2\x8b\x14\xc2\x1c\x83\x9c\x3d\x1c\x83\x34\x4c\x0d\x0c\x34\xad\xb9\xb8\x42\x03\x5c\x1c\x43\xa0\xea\x83\x5d\x43\x90\x14\xda\x2a\xa8\xab\x2b\x84\x7b\xb8\x06\xb9\xa2\x08\xe6\x95\xe6\xe4\x58\x73\x71\x21\x5b\xee\x92\x5f\x9e\x87\xc5\x7a\x97\x20\xff\x00\x0c\xfb\xad\xb9\x00\x01\x00\x00\xff\xff\xc9\x39\x67\xc2\xb7\x00\x00\x00")

func mysql4SqlBytes() ([]byte, error) {
	return bindataRead(
		_mysql4Sql,
		"mysql/4.sql",
	)
}

func mysql4Sql() (*asset, error) {
	bytes, err := mysql4SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "mysql/4.sql", size: 183, mode: os.FileMode(420), modTime: time.Unix(1476151981, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mysql5Sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd2\xd5\x55\xd0\xce\xcd\x4c\x2f\x4a\x2c\x49\x55\x08\x2d\xe0\xe2\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x48\x2a\xcd\xcc\x49\x29\x56\x70\x74\x71\x51\x70\xf6\xf7\x09\xf5\xf5\x83\x88\xc4\x17\x67\xa6\xe7\xa5\xa6\x28\x28\x28\x38\xf9\xfb\xfb\xb8\x3a\xfa\x59\x13\xa5\xab\x2c\xb5\x28\x33\x2d\x33\x35\x05\xa1\x8b\x2b\x34\xc0\xc5\x31\x04\xae\x23\xd8\x35\x04\xdd\x02\x5b\x85\xb4\xc4\x9c\xe2\x54\x6b\x9c\x2a\xe1\x86\xc2\x55\x72\x21\xfb\xc8\x25\xbf\x3c\x0f\xab\x9f\x5c\x82\xfc\x03\xb0\x79\x0a\xab\x57\x30\x15\xc3\xac\xb5\xe6\x02\x04\x00\x00\xff\xff\x98\x15\xe9\x96\x40\x01\x00\x00")

func mysql5SqlBytes() ([]byte, error) {
	return bindataRead(
		_mysql5Sql,
		"mysql/5.sql",
	)
}

func mysql5Sql() (*asset, error) {
	bytes, err := mysql5SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "mysql/5.sql", size: 320, mode: os.FileMode(420), modTime: time.Unix(1476151981, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mysql6Sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x5c\x8f\xc1\x4a\xc4\x30\x10\x86\xef\xf3\x14\x73\x6c\x71\x17\x16\xa1\xa7\x3d\xc5\xee\xa0\x41\x37\xad\x43\x22\xf4\x54\x42\x13\x4b\xc1\xb6\x21\x46\xc4\xb7\x17\x2c\xad\xd6\x39\x0d\xdf\xc7\xcf\xcc\x7f\x3c\xe2\xcd\x38\xf4\xd1\x26\x8f\x26\x00\x94\x4c\x42\x13\x6a\x71\xf7\x44\x68\x7b\x3f\xa5\x77\xcc\x60\xd9\xda\xc1\xe1\x32\x52\x69\xba\x27\xc6\x9a\xe5\x55\x70\x83\x8f\xd4\xa0\x30\xba\x6a\xa5\x2a\x99\xae\xa4\x34\x1c\x96\x88\x75\x2e\xfe\x44\x5e\x04\x97\x0f\x82\xb3\xdb\xa2\xc8\x57\x19\xde\x6c\x7a\x9d\xe3\xb8\xc9\xe2\x74\xda\x64\x67\x83\xed\x86\xf4\xb5\x1e\xdb\x78\xf4\x36\x79\x87\xff\xf9\x47\x70\x7b\x0e\x07\xa3\xe4\xb3\xa1\xec\xf7\x93\x1c\xf2\x33\x00\xfc\x2d\x7d\x99\x3f\x27\x80\x0b\x57\xf5\xae\xf4\x19\xbe\x03\x00\x00\xff\xff\xc0\x1a\x38\x79\x1a\x01\x00\x00")

func mysql6SqlBytes() ([]byte, error) {
	return bindataRead(
		_mysql6Sql,
		"mysql/6.sql",
	)
}

func mysql6Sql() (*asset, error) {
	bytes, err := mysql6SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "mysql/6.sql", size: 282, mode: os.FileMode(420), modTime: time.Unix(1477361141, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mysql7Sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x91\xcf\x4a\xc4\x30\x10\xc6\xef\xf3\x14\x73\x6c\xb1\x0b\x45\xd8\x53\x4f\x69\x3b\x68\x70\x9b\xae\x43\x22\xee\xa9\x04\x1d\x96\xa2\xad\xb2\xad\xab\xbe\xbd\x2c\x0b\x9a\x46\x34\xb7\xf0\xfd\xe1\xcb\x2f\xab\x15\x5e\x0c\xfd\xfe\xe0\x67\x41\xf7\x0a\x50\x31\x29\x4b\x68\x55\xb9\x21\x9c\xc5\x0f\xdd\x24\x0f\x07\x99\x27\x4c\x20\xbc\x77\xfd\x23\x9e\x8e\x36\x96\xae\x88\x71\xcb\xba\x51\xbc\xc3\x1b\xda\xa1\x72\xb6\xed\xb4\xa9\x98\x1a\x32\x16\xb2\x30\xf6\x24\x9f\xa7\xd8\x9d\xe2\xea\x5a\x71\x72\xb9\x5e\xa7\x4b\xc3\xe8\x07\xf9\xd7\x70\xf4\xcf\x6f\x82\xd8\x50\xad\x5d\x53\x6e\xda\x72\x29\xf7\x83\xdf\xcb\xf4\x93\xcf\xf3\x3c\x2a\x90\xa3\x8c\x73\xec\x80\xcc\x19\x7d\xeb\x28\x89\xb7\x64\x18\xcd\x4f\x21\x2d\xbe\x39\x69\x53\xd3\x3d\xf6\x1f\x5d\x88\xea\xfc\xc8\xd6\x2c\xf9\x61\x12\x17\x15\x00\x21\xfe\xfa\xe5\x7d\x04\xa8\xb9\xdd\xfe\x5d\x5b\x9c\xf5\xdf\xdf\x53\xc0\x57\x00\x00\x00\xff\xff\x34\xc5\x0e\x8f\xca\x01\x00\x00")

func mysql7SqlBytes() ([]byte, error) {
	return bindataRead(
		_mysql7Sql,
		"mysql/7.sql",
	)
}

func mysql7Sql() (*asset, error) {
	bytes, err := mysql7SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "mysql/7.sql", size: 458, mode: os.FileMode(420), modTime: time.Unix(1476151981, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mysql8Sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd2\xd5\x55\xd0\xce\xcd\x4c\x2f\x4a\x2c\x49\x55\x08\x2d\xe0\xe2\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x48\x2a\xcd\xcc\x49\x29\x56\x70\x74\x71\x51\x70\xf6\xf7\x09\xf5\xf5\x83\x88\xc4\x17\x24\x16\xa5\xe6\x95\x28\x78\xfa\x85\xb8\xba\xbb\x06\x29\xb8\xb8\xba\x39\x86\xfa\x84\x28\x18\x58\x73\x71\x21\x1b\xe7\x92\x5f\x9e\x87\xd5\x40\x97\x20\xff\x00\x6c\x26\x5a\x73\x01\x02\x00\x00\xff\xff\xec\x8b\x73\x08\x8e\x00\x00\x00")

func mysql8SqlBytes() ([]byte, error) {
	return bindataRead(
		_mysql8Sql,
		"mysql/8.sql",
	)
}

func mysql8Sql() (*asset, error) {
	bytes, err := mysql8SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "mysql/8.sql", size: 142, mode: os.FileMode(420), modTime: time.Unix(1477308170, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mysql9Sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd2\xd5\x55\xd0\xce\xcd\x4c\x2f\x4a\x2c\x49\x55\x08\x2d\xe0\xe2\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x28\x4e\x4d\x2e\x4a\x2d\x29\x56\x00\x03\x47\x17\x17\x05\x67\x7f\x9f\x50\x5f\x3f\xa8\x78\x7c\x71\x76\x66\x41\x7c\x59\x6a\x51\x66\x5a\x25\x44\x89\x93\xbf\xbf\x8f\xab\xa3\x9f\x35\x8a\x21\x25\xa9\x89\xb9\xf1\x30\x93\x90\x0c\x41\x12\x47\x31\x09\x6e\x08\x57\x68\x80\x8b\x63\x08\x9a\x2b\x82\x5d\x43\x70\x5a\x6f\xab\x90\x96\x98\x53\x9c\x6a\x0d\xd3\x88\x62\x33\x48\x23\x2e\x2b\xe1\x1a\xb9\x90\x43\xc3\x25\xbf\x3c\x0f\x4f\x78\xb8\x04\xf9\x07\xe0\x0e\x10\x3c\x61\x80\xac\x11\x87\x8b\xac\xb9\x00\x01\x00\x00\xff\xff\xd9\xae\x8f\xc9\x97\x01\x00\x00")

func mysql9SqlBytes() ([]byte, error) {
	return bindataRead(
		_mysql9Sql,
		"mysql/9.sql",
	)
}

func mysql9Sql() (*asset, error) {
	bytes, err := mysql9SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "mysql/9.sql", size: 407, mode: os.FileMode(420), modTime: time.Unix(1477308170, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _postgres10Sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd2\xd5\x55\xd0\xce\xcd\x4c\x2f\x4a\x2c\x49\x55\x08\x2d\xe0\xe2\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x28\x4e\x4d\x2e\x4a\x2d\x29\x56\x00\x03\x47\x17\x17\x05\x67\x7f\x9f\x50\x5f\x3f\xa8\x78\x7c\x72\x7e\x5e\x72\x6a\x62\x0e\x44\xda\xc9\xdf\xdf\xc7\xd5\xd1\xcf\x1a\xc5\x80\x92\xd4\xc4\xdc\x78\x98\x29\x48\x06\x20\x89\xc3\x4d\x81\x1b\xc0\x15\x1a\xe0\xe2\x18\x82\x66\x7b\xb0\x6b\x08\x56\x6b\x6d\x15\xd2\x12\x73\x8a\x53\xad\x61\x9a\x50\x6c\x04\x69\xc2\x66\x15\x5c\x13\x17\xb2\xef\x5d\xf2\xcb\xf3\xf0\xf8\xdf\x25\xc8\x3f\x00\x7b\x00\xe0\xf1\x33\xb2\x26\x2c\x2e\xb1\xe6\x02\x04\x00\x00\xff\xff\x15\x7e\x10\xfd\x7f\x01\x00\x00")

func postgres10SqlBytes() ([]byte, error) {
	return bindataRead(
		_postgres10Sql,
		"postgres/10.sql",
	)
}

func postgres10Sql() (*asset, error) {
	bytes, err := postgres10SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "postgres/10.sql", size: 383, mode: os.FileMode(420), modTime: time.Unix(1479348247, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _postgres1_initSql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xa4\x56\x4d\x6f\xe3\x36\x10\x3d\x57\xbf\x82\xb7\x44\xa8\xb7\x8e\x83\x64\x51\xd4\x27\x65\xa3\xb6\x46\x53\x7b\x2b\x3b\x8b\xcd\xc9\xa0\xa5\x89\xcd\xb5\x44\xaa\x14\xe5\xd8\xff\xbe\x20\x25\x7e\xc9\xb4\x2f\x15\x10\x40\x79\x6f\x86\x9c\x8f\x37\x63\x7d\xfa\x84\x7e\xae\xc8\x96\x63\x01\xe8\xb5\x8e\xa2\x2f\x59\x9a\xac\x52\xb4\x4a\x9e\x5e\x52\xd4\x36\xc0\x1b\x74\x1b\xa9\x97\x35\x29\x90\x7c\x96\x69\x36\x4b\x5e\xd0\xd7\x6c\xf6\x77\x92\xbd\xa1\xbf\xd2\xb7\x68\xa4\xf8\x92\x6d\x09\x45\xe8\x5b\x92\x7d\xf9\x33\xc9\x6e\x1f\xee\xe2\x9e\x10\x6c\x0f\x0e\x31\xb9\xff\x55\x33\x0d\xe4\x1c\x44\x88\x81\x63\x4d\xf8\x09\xcd\xe6\xab\xf4\x8f\x34\xd3\x60\x85\x49\x69\x0f\xba\x7f\xfc\xac\xcd\xf1\x01\x0b\xcc\x83\x4c\x2e\xc8\x01\xd0\xd3\x62\xf1\x92\x26\x73\x0d\x16\x95\x0c\xd5\x07\x77\xb8\xd9\xa1\x41\x98\xd1\xe8\x75\x3e\xfb\xe7\x35\xbd\xb5\x19\xc6\x51\x3c\x1d\xd4\x89\x43\xcd\x54\x9d\xe4\x8b\xae\x53\xff\x84\xca\xa5\xcc\xdc\x9a\x22\x9b\xa8\xe2\xd8\x07\x05\x6e\x8e\xb0\x59\x3d\xc6\xbd\x01\xc5\x15\xa0\x6b\x06\xef\x6d\x59\x5a\x2b\x6d\xf0\x38\x99\x68\x83\xbe\x62\x83\x13\x1e\xef\xee\xb4\x41\x49\xe8\xfe\xfc\x8a\xc9\x9d\xb5\xc8\x4b\x46\xe1\xaa\xc5\x86\x63\x9a\xef\xae\x5c\x22\x48\x05\xac\x15\xc1\x22\xd4\x9c\x1c\xa4\x2c\xbb\xc7\xf4\xaa\xf3\xe3\x6d\x23\xa0\x08\x72\xb8\x2c\xd9\xc7\xba\xe6\x57\xb8\x56\x75\x3a\xc8\x15\x50\x97\xec\xd4\x04\x39\x81\xb7\xcd\xb9\x5f\xaf\x9b\xcb\x49\xe2\xba\x76\x34\xe1\x35\xcb\xe8\xcb\x6f\x5a\x40\x63\x7b\x38\x29\x89\xed\xe1\x64\x54\x13\xd2\x96\xe4\xb5\x0c\x4d\x3d\x25\x58\xb7\x9b\x92\xe4\x08\x3d\xbd\xad\xd2\xa4\x87\xfa\x0a\x77\x90\x89\xc5\x39\x22\x10\xc8\xa6\x25\x65\xa1\x42\x51\x6f\x8e\xdc\x43\xe1\x74\x36\x76\x2e\x4c\x48\x1d\x41\xdb\x6a\xd3\x29\x7d\x40\xc0\x01\xa8\x18\xd4\x2b\xd6\x64\x23\xb0\x68\x9b\x0b\x24\xd0\x7f\x5b\x68\xa5\x36\x06\x47\xe6\x1c\x70\xa7\x99\x01\xd1\x08\xcc\x83\xc4\x3b\xa1\xa4\xd9\x85\x8e\x62\x55\x45\x84\x1b\x80\xda\x76\x1d\x69\x45\xef\xaf\x23\x5d\x8a\xf7\xa1\x52\x26\xf7\x2e\xdb\xd4\x90\x5f\x64\x2b\xd6\x0d\x44\x88\x15\x44\x94\x10\x1a\xc5\x8e\xae\xa0\x69\xf0\x16\xdc\xb0\x5c\x5a\x4e\x62\x23\x70\x55\x0f\x73\xc5\xad\xd8\x31\x7e\x21\x57\xbb\x45\x82\x77\xf6\x0b\xfb\x6c\x2c\x3a\xd6\x6e\x18\xdf\xd9\x08\xd1\xd5\xc8\x08\x79\x52\xf2\x84\x39\x9b\x3f\xa7\xdf\x11\x39\xae\xad\x09\x5a\xcc\x8d\x52\x7d\xc7\xa1\x9e\x7f\xb0\x8d\x52\xf3\x0f\xb6\xf1\x56\x77\x48\xcd\xd2\x86\xb2\x02\xb4\xa1\x29\x95\x24\xdc\x71\xf0\x08\x2b\xf2\x01\x61\x75\x3c\x50\xb2\x24\xe1\x48\xc4\x3a\x67\x05\x04\xbc\xb8\xde\x7d\x1e\x61\x95\x3f\x20\xac\x8e\xcf\x3c\x0e\x84\x33\x5a\xc9\x59\xf3\x55\x61\x7a\xe0\x66\x36\x42\x36\x9d\x70\x03\x8c\xb5\xac\x7f\x57\x59\xf7\x80\x78\x1a\xf4\xa0\x2a\x4b\xcf\xa3\xaf\xf2\x59\xb7\x66\xbf\xa3\xf9\x62\x85\xd2\xef\xb3\xe5\x6a\x89\x4a\xb6\x55\xbd\x2b\xd9\xf6\xda\xe7\x89\xa4\xfb\xf6\x9a\xf4\x25\x56\x60\x81\x11\x1a\xae\x3f\x6b\x1d\xd8\x7e\xfe\xfd\x32\x4a\x15\x80\x2b\x8a\x50\x04\x8a\xc7\x45\xc1\x3d\xb1\xdf\x3f\xc4\x9a\xe2\xf9\xce\x9b\x12\x4d\xe4\xc0\x85\x09\xb1\x83\xf6\x70\x42\x03\x28\xc7\xc8\x42\x32\xe6\x68\x36\x5f\xa6\xd9\x4a\xa6\xbb\xd0\x51\x9a\x18\x46\xc8\xdc\xd9\xbf\xca\x5b\xfa\xd7\x3d\x9c\x34\x88\x63\xf4\x2d\x79\x79\x4d\x97\xd1\x4f\xb7\x37\x2d\x25\xc7\xdf\xc6\xe3\xf1\x01\xf3\x31\x6f\xe9\xb8\x60\xf9\x1e\xf8\x2f\x0d\xcb\xf7\x37\x23\x74\x53\x12\xda\x1e\xd7\xb8\x2a\x3e\x3f\xc8\x7f\xcd\x5f\x3c\xfa\x3f\xce\xd3\x28\x72\x3f\x50\x9f\xd9\x07\x8d\xa2\xe7\x6c\xf1\xb5\xef\x86\xca\x6c\xea\x22\x52\x11\x1e\x20\x25\xe5\x01\xdd\x56\xf0\x20\xf9\xdb\xea\x01\x72\xc4\x7c\x44\x7d\xe2\x79\x88\xfa\x38\x9e\x46\xff\x05\x00\x00\xff\xff\x62\x4c\xaf\x58\x41\x0b\x00\x00")

func postgres1_initSqlBytes() ([]byte, error) {
	return bindataRead(
		_postgres1_initSql,
		"postgres/1_init.sql",
	)
}

func postgres1_initSql() (*asset, error) {
	bytes, err := postgres1_initSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "postgres/1_init.sql", size: 2881, mode: os.FileMode(420), modTime: time.Unix(1478671402, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _postgres2Sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd2\xd5\x55\xd0\xce\xcd\x4c\x2f\x4a\x2c\x49\x55\x08\x2d\xe0\xe2\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x28\x4a\x2d\xc8\x2f\x56\x50\x70\x74\x71\x51\x70\xf6\xf7\x09\xf5\xf5\x03\x8b\xc4\x17\x27\xe7\x2a\x80\x40\x98\x63\x90\xb3\x87\x63\x90\x86\x91\xa9\xa6\x35\x8a\xbe\xa4\xd2\xcc\x9c\x94\x62\x64\x7d\x60\x91\xf8\x94\xd4\x82\x9c\xfc\x4a\xb8\x3e\x53\x03\x03\x4d\x6b\x2e\xae\xd0\x00\x17\xc7\x10\xb8\x65\xc1\xae\x21\x08\x5b\x6c\x15\xd4\xd3\x33\x4b\xd4\xad\x61\x6a\xa0\x06\x83\xd4\xa0\x98\x68\xab\xa0\xae\x6e\xcd\xc5\x85\xec\x17\x97\xfc\xf2\x3c\xac\xbe\x71\x09\xf2\x0f\x40\xf7\x0e\x56\xe7\x23\x2b\x44\xb6\xcd\x9a\x0b\x10\x00\x00\xff\xff\x61\xb8\xea\x38\x34\x01\x00\x00")

func postgres2SqlBytes() ([]byte, error) {
	return bindataRead(
		_postgres2Sql,
		"postgres/2.sql",
	)
}

func postgres2Sql() (*asset, error) {
	bytes, err := postgres2SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "postgres/2.sql", size: 308, mode: os.FileMode(420), modTime: time.Unix(1476151981, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _postgres3Sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x52\xcd\x6e\xb3\x30\x10\xbc\xef\x53\xec\x11\xf4\x11\x09\x7d\x52\x4f\x9c\x9c\x60\xb5\xa8\x29\x49\x5d\xa8\xca\x29\xb2\xca\x0a\x59\x0d\x3f\xb2\x49\xd2\xbe\x7d\x95\x42\x5d\x20\x34\xf5\x69\xe5\x99\xf1\xee\x8c\x77\xb1\xc0\x7f\xa5\x2a\xb4\x6c\x09\xd3\x06\x60\x25\x38\x4b\x38\x26\x6c\xb9\xe6\x68\xe8\x55\x53\x6b\xd0\x81\xbe\xdc\xa9\x1c\xfb\xf3\xc4\x45\xc4\xd6\xb8\x15\xd1\x03\x13\x19\xde\xf3\x0c\xbc\x9e\xa4\xa9\xa9\x3b\x66\x14\x27\xfc\x96\x0b\x8b\x54\xb2\xa4\x4e\xfe\xcc\xc4\xea\x8e\x09\xe7\xc6\xf7\x5d\x0b\x1f\xe5\xfe\xd0\xe1\xcb\x2c\xe1\xcc\xde\xab\x52\x16\x64\x86\xb2\xff\xfe\x50\x47\x47\xaa\xda\x19\x1c\xbc\x34\x8e\x1e\x53\xee\x0c\xda\x7b\x38\x9e\xd2\x05\x37\x98\xd8\xd6\x54\x28\xd3\xea\x8f\xb3\xef\xef\xfa\x0f\xe7\x96\x36\xe3\xdd\x62\x32\xcf\xf5\x9c\x7b\x4b\xa0\x52\xaa\xfd\x35\xc2\xc1\x90\xee\x32\x9c\x04\x61\x19\x8d\x34\xe6\x54\xeb\xfc\x77\x46\x5b\xbf\x51\x85\x57\xc2\x1a\xcd\xeb\xe1\xd4\xda\x28\xb0\x28\x0e\xf9\x0b\xaa\xf7\x5d\xbf\x2a\x5f\x24\xc4\x4d\x6c\x77\x07\x9d\x49\xde\xc1\x85\x76\xd4\xe1\xac\xfd\xf9\x80\x8b\xe6\x01\xc0\x70\x65\xc3\xfa\x54\x01\x84\x62\xb3\x9d\x1f\x25\x98\x60\xa3\xf7\x02\xf8\x0c\x00\x00\xff\xff\xf3\xdf\x4e\x2e\xfe\x02\x00\x00")

func postgres3SqlBytes() ([]byte, error) {
	return bindataRead(
		_postgres3Sql,
		"postgres/3.sql",
	)
}

func postgres3Sql() (*asset, error) {
	bytes, err := postgres3SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "postgres/3.sql", size: 766, mode: os.FileMode(420), modTime: time.Unix(1476151981, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _postgres4Sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd2\xd5\x55\xd0\xce\xcd\x4c\x2f\x4a\x2c\x49\x55\x08\x2d\xe0\xe2\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\xc8\xca\x4f\x2a\x56\x70\x74\x71\x51\x70\xf6\xf7\x09\xf5\xf5\x03\xf1\xe3\x53\x8b\x8a\xf2\x8b\x14\xc2\x1c\x83\x9c\x3d\x1c\x83\x34\x4c\x0d\x0c\x34\xad\xb9\xb8\x42\x03\x5c\x1c\x43\xa0\xea\x83\x5d\x43\x90\x14\xda\x2a\xa8\xab\x5b\x73\x71\x21\xdb\xe2\x92\x5f\x9e\x87\xc5\x1e\x97\x20\xff\x00\x0c\x8b\xac\xb9\x00\x01\x00\x00\xff\xff\x62\xf4\x98\xa3\xa0\x00\x00\x00")

func postgres4SqlBytes() ([]byte, error) {
	return bindataRead(
		_postgres4Sql,
		"postgres/4.sql",
	)
}

func postgres4Sql() (*asset, error) {
	bytes, err := postgres4SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "postgres/4.sql", size: 160, mode: os.FileMode(420), modTime: time.Unix(1476151981, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _postgres5Sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x90\xc1\x4a\xc3\x40\x10\x86\xef\xf3\x14\xff\x2d\x2d\xda\x27\x58\x3c\x6c\xbb\x03\x16\xe2\x6e\x89\x09\x7a\x0b\x91\x6c\x97\x81\xba\x96\x6c\xa2\x3e\xbe\xa8\x6d\x0c\x1a\xc5\xeb\xcc\xff\x7f\xc3\x7c\xab\x15\x2e\x1e\x25\x74\x4d\xef\x51\x1d\x89\x74\x5e\x72\x81\x52\xaf\x73\xc6\xc3\x20\x87\x36\x41\x1b\x83\x8d\xcb\xab\x1b\xfb\x39\xa9\x93\x84\xe8\x5b\x00\x6b\xe7\x72\xd6\x56\xfd\xab\xf5\xec\x3b\xd9\x8b\x6f\xbf\x5a\x54\xed\x8c\x2e\xc7\xc6\x2d\x97\xdf\x0f\x5c\x61\xdf\x1c\x92\x57\xbf\x26\x47\xe8\x98\xa4\x4d\xc1\xef\xd1\xad\x35\x7c\x0f\x79\xad\x4f\xc8\xbe\xe9\x87\x54\x77\x43\x8c\x12\x03\x9c\x3d\xb3\x16\xd3\xfd\x92\x80\xbb\x6b\x2e\x18\xd3\x29\xb6\x16\x8b\xec\xe8\x63\x2b\x31\x64\x97\xc8\x4e\x94\x6c\xa9\x88\xa6\x02\xcd\xd3\x4b\x9c\x55\x68\x0a\xb7\x9b\x73\x38\x6b\xee\x67\xf8\xfc\xa5\xa2\x8f\xdd\x9f\xaf\x29\x7a\x0b\x00\x00\xff\xff\x70\x46\x83\xb2\xd3\x01\x00\x00")

func postgres5SqlBytes() ([]byte, error) {
	return bindataRead(
		_postgres5Sql,
		"postgres/5.sql",
	)
}

func postgres5Sql() (*asset, error) {
	bytes, err := postgres5SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "postgres/5.sql", size: 467, mode: os.FileMode(420), modTime: time.Unix(1476151981, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _postgres6Sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x8f\x4f\x6b\x83\x40\x10\xc5\xef\xf3\x29\xe6\xa8\x54\xc1\x4b\x4f\x9e\xb6\x3a\xb4\x4b\xad\xb5\x53\x2d\x78\x2a\x8b\xbb\x11\x21\xea\xb2\xd9\x10\xf2\xed\x03\x91\xfc\x31\x64\x4e\xc3\xef\xbd\xc3\xfb\xc5\x31\xbe\x8c\x43\xef\x94\x37\xd8\x58\x80\x8c\x49\xd4\x84\xb5\x78\x2b\x08\x55\x6f\x26\xbf\xc3\x00\x96\xef\x7f\xd0\xb8\xdc\x2f\xb1\x14\x05\x56\x2c\xbf\x04\xb7\xf8\x49\x2d\x44\x4b\x45\x69\xed\xce\x95\x3f\xc1\xd9\x87\xe0\xe0\x35\x49\xc2\x4b\x68\xb7\xca\x6f\x66\x37\x3e\x0d\x3b\x65\x55\x37\xf8\x23\xca\xb2\xa6\x77\xe2\x2b\x77\x46\x79\xa3\xf1\x91\xef\xad\x5e\x73\x88\x9a\x52\xfe\x34\x14\xdc\x96\x84\x10\xa6\x00\x70\x2f\x99\xcf\x87\x09\x20\xe7\xef\x6a\x25\x99\xc2\x29\x00\x00\xff\xff\xa5\xd4\xf0\x97\x0a\x01\x00\x00")

func postgres6SqlBytes() ([]byte, error) {
	return bindataRead(
		_postgres6Sql,
		"postgres/6.sql",
	)
}

func postgres6Sql() (*asset, error) {
	bytes, err := postgres6SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "postgres/6.sql", size: 266, mode: os.FileMode(420), modTime: time.Unix(1476151981, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _postgres7Sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x91\xc1\x4a\xc4\x30\x10\x86\xef\xf3\x14\x73\x4c\xb1\x0b\x45\xd8\x53\x4e\xd9\xed\x80\xc1\xb5\xbb\xc6\x56\xec\xa9\x04\x1d\x96\xa0\xa9\xb2\x8d\x55\xdf\x5e\x4a\x41\xd3\x88\x9b\x5b\x98\x6f\x7e\xfe\x7c\x59\xad\xf0\xc2\xbb\xe3\xc9\x06\xc6\xe6\x0d\x60\x6b\x48\xd5\x84\xb5\xda\xec\x08\x03\x5b\xdf\x0d\xfc\x78\xe2\x30\xa0\x80\xf8\xde\xb9\x27\x9c\xce\x1d\x19\xad\x76\x78\x30\xfa\x46\x99\x16\xaf\xa9\x85\x3c\xc6\x9e\xf9\x6b\xc2\xee\x95\xd9\x5e\x29\x23\x2e\xd7\xeb\x6c\x09\xf4\xd6\xf3\x59\x60\xb4\x2f\xef\x8c\xb8\x69\x6b\x52\xcb\x89\xf3\xf6\xc8\xc3\xef\x6a\x51\x14\xc9\x2e\x8f\xdc\x87\x94\x80\xbc\xa9\xf4\x6d\x43\x22\xad\x91\x63\xd2\x3c\x83\x4c\xfe\x28\xd1\x55\x49\x0f\xe8\x3e\xbb\xd8\xca\xfc\xbe\x7d\xb5\x54\x85\x22\x0d\x92\x00\xb1\xe9\xf2\xf5\xa3\x07\x28\xcd\xfe\xf0\x7f\xac\x9c\xe7\x7f\x7f\x42\xc2\x77\x00\x00\x00\xff\xff\xc5\xbb\xbd\xe3\xb5\x01\x00\x00")

func postgres7SqlBytes() ([]byte, error) {
	return bindataRead(
		_postgres7Sql,
		"postgres/7.sql",
	)
}

func postgres7Sql() (*asset, error) {
	bytes, err := postgres7SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "postgres/7.sql", size: 437, mode: os.FileMode(420), modTime: time.Unix(1476151981, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _postgres8Sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd2\xd5\x55\xd0\xce\xcd\x4c\x2f\x4a\x2c\x49\x55\x08\x2d\xe0\xe2\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x48\x2a\xcd\xcc\x49\x29\x56\x70\x74\x71\x51\x70\xf6\xf7\x09\xf5\xf5\x83\x88\xc4\x17\x24\x16\xa5\xe6\x95\x28\x78\xfa\x85\xb8\xba\xbb\x06\x29\xb8\xb8\xba\x39\x86\xfa\x84\x28\x18\x58\x73\x71\x21\x1b\xe7\x92\x5f\x9e\x87\xd5\x40\x97\x20\xff\x00\x6c\x26\x5a\x73\x01\x02\x00\x00\xff\xff\xec\x8b\x73\x08\x8e\x00\x00\x00")

func postgres8SqlBytes() ([]byte, error) {
	return bindataRead(
		_postgres8Sql,
		"postgres/8.sql",
	)
}

func postgres8Sql() (*asset, error) {
	bytes, err := postgres8SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "postgres/8.sql", size: 142, mode: os.FileMode(420), modTime: time.Unix(1477308170, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _postgres9Sql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd2\xd5\x55\xd0\xce\xcd\x4c\x2f\x4a\x2c\x49\x55\x08\x2d\xe0\xe2\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x28\x4e\x4d\x2e\x4a\x2d\x29\x56\x00\x03\x47\x17\x17\x05\x67\x7f\x9f\x50\x5f\x3f\xa8\x78\x7c\x71\x76\x66\x41\x7c\x59\x6a\x51\x66\x5a\x25\x44\x89\x93\xbf\xbf\x8f\xab\xa3\x9f\x35\x8a\x21\x25\xa9\x89\xb9\xf1\x30\x93\x90\x0c\x41\x12\x47\x31\x09\x6e\x08\x57\x68\x80\x8b\x63\x08\x9a\x2b\x82\x5d\x43\x70\x5a\x6f\xab\x90\x96\x98\x53\x9c\x6a\x0d\xd3\x88\x62\x33\x48\x23\x2e\x2b\xe1\x1a\xb9\x90\x43\xc3\x25\xbf\x3c\x0f\x4f\x78\xb8\x04\xf9\x07\xe0\x0e\x10\x3c\x61\x80\xac\x11\x87\x8b\xac\xb9\x00\x01\x00\x00\xff\xff\xd9\xae\x8f\xc9\x97\x01\x00\x00")

func postgres9SqlBytes() ([]byte, error) {
	return bindataRead(
		_postgres9Sql,
		"postgres/9.sql",
	)
}

func postgres9Sql() (*asset, error) {
	bytes, err := postgres9SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "postgres/9.sql", size: 407, mode: os.FileMode(420), modTime: time.Unix(1477308170, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"sqlite3/10.sql": sqlite310Sql,
	"sqlite3/1_init.sql": sqlite31_initSql,
	"sqlite3/2.sql": sqlite32Sql,
	"sqlite3/3.sql": sqlite33Sql,
	"sqlite3/4.sql": sqlite34Sql,
	"sqlite3/5.sql": sqlite35Sql,
	"sqlite3/6.sql": sqlite36Sql,
	"sqlite3/7.sql": sqlite37Sql,
	"sqlite3/8.sql": sqlite38Sql,
	"sqlite3/9.sql": sqlite39Sql,
	"mysql/10.sql": mysql10Sql,
	"mysql/1_init.sql": mysql1_initSql,
	"mysql/2.sql": mysql2Sql,
	"mysql/3.sql": mysql3Sql,
	"mysql/4.sql": mysql4Sql,
	"mysql/5.sql": mysql5Sql,
	"mysql/6.sql": mysql6Sql,
	"mysql/7.sql": mysql7Sql,
	"mysql/8.sql": mysql8Sql,
	"mysql/9.sql": mysql9Sql,
	"postgres/10.sql": postgres10Sql,
	"postgres/1_init.sql": postgres1_initSql,
	"postgres/2.sql": postgres2Sql,
	"postgres/3.sql": postgres3Sql,
	"postgres/4.sql": postgres4Sql,
	"postgres/5.sql": postgres5Sql,
	"postgres/6.sql": postgres6Sql,
	"postgres/7.sql": postgres7Sql,
	"postgres/8.sql": postgres8Sql,
	"postgres/9.sql": postgres9Sql,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"mysql": &bintree{nil, map[string]*bintree{
		"10.sql": &bintree{mysql10Sql, map[string]*bintree{}},
		"1_init.sql": &bintree{mysql1_initSql, map[string]*bintree{}},
		"2.sql": &bintree{mysql2Sql, map[string]*bintree{}},
		"3.sql": &bintree{mysql3Sql, map[string]*bintree{}},
		"4.sql": &bintree{mysql4Sql, map[string]*bintree{}},
		"5.sql": &bintree{mysql5Sql, map[string]*bintree{}},
		"6.sql": &bintree{mysql6Sql, map[string]*bintree{}},
		"7.sql": &bintree{mysql7Sql, map[string]*bintree{}},
		"8.sql": &bintree{mysql8Sql, map[string]*bintree{}},
		"9.sql": &bintree{mysql9Sql, map[string]*bintree{}},
	}},
	"postgres": &bintree{nil, map[string]*bintree{
		"10.sql": &bintree{postgres10Sql, map[string]*bintree{}},
		"1_init.sql": &bintree{postgres1_initSql, map[string]*bintree{}},
		"2.sql": &bintree{postgres2Sql, map[string]*bintree{}},
		"3.sql": &bintree{postgres3Sql, map[string]*bintree{}},
		"4.sql": &bintree{postgres4Sql, map[string]*bintree{}},
		"5.sql": &bintree{postgres5Sql, map[string]*bintree{}},
		"6.sql": &bintree{postgres6Sql, map[string]*bintree{}},
		"7.sql": &bintree{postgres7Sql, map[string]*bintree{}},
		"8.sql": &bintree{postgres8Sql, map[string]*bintree{}},
		"9.sql": &bintree{postgres9Sql, map[string]*bintree{}},
	}},
	"sqlite3": &bintree{nil, map[string]*bintree{
		"10.sql": &bintree{sqlite310Sql, map[string]*bintree{}},
		"1_init.sql": &bintree{sqlite31_initSql, map[string]*bintree{}},
		"2.sql": &bintree{sqlite32Sql, map[string]*bintree{}},
		"3.sql": &bintree{sqlite33Sql, map[string]*bintree{}},
		"4.sql": &bintree{sqlite34Sql, map[string]*bintree{}},
		"5.sql": &bintree{sqlite35Sql, map[string]*bintree{}},
		"6.sql": &bintree{sqlite36Sql, map[string]*bintree{}},
		"7.sql": &bintree{sqlite37Sql, map[string]*bintree{}},
		"8.sql": &bintree{sqlite38Sql, map[string]*bintree{}},
		"9.sql": &bintree{sqlite39Sql, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

